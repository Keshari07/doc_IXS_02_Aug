USAGE: qm guest passwd <vmid> <username> [OPTIONS]

  Sets the password for the given user to the given password

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <username> <string>

             The user to set the password for.

  -crypted   <boolean>   (default=0)

             set to 1 if the password has already been passed through
             crypt()

USAGE: qm help [<extra-args>] [OPTIONS]

  Get help about specified command.

  <extra-args> <array>

             Shows help for a specific command

  -verbose   <boolean>

             Verbose output format.

USAGE: qm importovf <vmid> <manifest> <storage> [OPTIONS]

  Create a new VM using parameters read from an OVF manifest

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <manifest> <string>

             path to the ovf file

  <storage>  <string>

             Target storage ID

  -dryrun    <boolean>

             Print a parsed representation of the extracted OVF parameters,
             but do not create a VM

  -format    <qcow2 | raw | vmdk>

             Target format

USAGE: qm list  [OPTIONS]

  Virtual machine index (per node).

  -full      <boolean>

             Determine the full status of active VMs.

USAGE: qm listsnapshot <vmid>

  List all snapshots.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm migrate <vmid> <target> [OPTIONS]

  Migrate virtual machine. Creates a new migration task.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <target>   <string>

             Target node.

  -bwlimit   <integer> (0 - N)   (default=migrate limit from datacenter or
             storage config)

             Override I/O bandwidth limit (in KiB/s).

  -force     <boolean>

             Allow to migrate VMs which use local devices. Only root may
             use this option.

  -migration_network <string>

             CIDR of the (sub) network that is used for migration.

  -migration_type <insecure | secure>

             Migration traffic is encrypted using an SSH tunnel by default.
             On secure, completely private networks this can be disabled to
             increase performance.

  -online    <boolean>

             Use online/live migration if VM is running. Ignored if VM is
             stopped.

  -targetstorage <string>

             Mapping from source to target storages. Providing only a
             single storage ID maps all source storages to that storage.
             Providing the special value '1' will map each source storage
             to itself.

  -with-local-disks <boolean>

             Enable live storage migration for local disk

USAGE: qm monitor <vmid>

  Enter QEMU Monitor interface.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm mtunnel

  Used by qmigrate - do not use manually.

USAGE: qm nbdstop <vmid>

  Stop embedded nbd server.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm pending <vmid>

  Get the virtual machine configuration with both current and pending
  values.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm reboot <vmid> [OPTIONS]

  Reboot the VM by shutting it down, and starting it again. Applies pending
  changes.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -timeout   <integer> (0 - N)

             Wait maximal timeout seconds for the shutdown.

USAGE: qm remote-migrate <vmid> [<target-vmid>] <target-endpoint> --target-bridge <string> --target-storage <string> [OPTIONS]

  Migrate virtual machine to a remote cluster. Creates a new migration
  task. EXPERIMENTAL feature!

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <target-vmid> <integer> (1 - N)

             The (unique) ID of the VM.

  <target-endpoint> apitoken=<A full Proxmox API token including the secret
             value.> ,host=<Remote Proxmox hostname or IP>
             [,fingerprint=<Remote host's certificate fingerprint, if not
             trusted by system store.>] [,port=<integer>]

             Remote target endpoint

  -bwlimit   <integer> (0 - N)   (default=migrate limit from datacenter or
             storage config)

             Override I/O bandwidth limit (in KiB/s).

  -delete    <boolean>   (default=0)

             Delete the original VM and related data after successful
             migration. By default the original VM is kept on the source
             cluster in a stopped state.

  -online    <boolean>

             Use online/live migration if VM is running. Ignored if VM is
             stopped.

  -target-bridge <string>

             Mapping from source to target bridges. Providing only a single
             bridge ID maps all source bridges to that bridge. Providing
             the special value '1' will map each source bridge to itself.

  -target-storage <string>

             Mapping from source to target storages. Providing only a
             single storage ID maps all source storages to that storage.
             Providing the special value '1' will map each source storage
             to itself.

USAGE: qm reset <vmid> [OPTIONS]

  Reset virtual machine.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

USAGE: qm resume <vmid> [OPTIONS]

  Resume virtual machine.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -nocheck   <boolean>

             no description available

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

USAGE: qm rollback <vmid> <snapname> [OPTIONS]

  Rollback VM state to specified snapshot.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <snapname> <string>

             The name of the snapshot.

  -start     <boolean>   (default=0)

             Whether the VM should get started after rolling back
             successfully. (Note: VMs will be automatically started if the
             snapshot includes RAM.)

USAGE: qm sendkey <vmid> <key> [OPTIONS]

  Send key event to virtual machine.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <key>      <string>

             The key (qemu monitor encoding).

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

USAGE: qm set <vmid> [OPTIONS]

  Set virtual machine options (synchrounous API) - You should consider
  using the POST method instead for any actions involving hotplug or
  storage allocation.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -acpi      <boolean>   (default=1)

             Enable/disable ACPI.

  -affinity  <string>

             List of host cores used to execute guest processes, for
             example: 0,5,8-11

  -agent     [enabled=]<1|0> [,freeze-fs-on-backup=<1|0>]
             [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]

             Enable/disable communication with the QEMU Guest Agent and its
             properties.

  -arch      <aarch64 | x86_64>

             Virtual processor architecture. Defaults to the host.

  -args      <string>

             Arbitrary arguments passed to kvm.

  -audio0    device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]

             Configure a audio device, useful in combination with
             QXL/Spice.

  -autostart <boolean>   (default=0)

             Automatic restart after crash (currently ignored).

  -balloon   <integer> (0 - N)

             Amount of target RAM for the VM in MiB. Using zero disables
             the ballon driver.

  -bios      <ovmf | seabios>   (default=seabios)

             Select BIOS implementation.

  -boot      [[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]

             Specify guest boot order. Use the 'order=' sub-property as
             usage with no key or 'legacy=' is deprecated.

  -bootdisk  (ide|sata|scsi|virtio)\d+

             Enable booting from specified disk. Deprecated: Use 'boot:
             order=foo;bar' instead.

  -cdrom     <volume>

             This is an alias for option -ide2

  -cicustom  [meta=<volume>] [,network=<volume>] [,user=<volume>]
             [,vendor=<volume>]

             cloud-init: Specify custom files to replace the automatically
             generated ones at start.

  -cipassword <password>

             cloud-init: Password to assign the user. Using this is
             generally not recommended. Use ssh keys instead. Also note
             that older cloud-init versions do not support hashed
             passwords.

  -citype    <configdrive2 | nocloud | opennebula>

             Specifies the cloud-init configuration format. The default
             depends on the configured operating system type (`ostype`. We
             use the `nocloud` format for Linux, and `configdrive2` for
             windows.

  -ciuser    <string>

             cloud-init: User name to change ssh keys and password for
             instead of the image's configured default user.

  -cores     <integer> (1 - N)   (default=1)

             The number of cores per socket.

  -cpu       [[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>]
             [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>]
             [,phys-bits=<8-64|host>] [,reported-model=<enum>]

             Emulated CPU type.

  -cpulimit  <number> (0 - 128)   (default=0)

             Limit of CPU usage.

  -cpuunits  <integer> (1 - 262144)   (default=cgroup v1: 1024, cgroup v2:
             100)

             CPU weight for a VM, will be clamped to [1, 10000] in cgroup
             v2.

  -delete    <string>

             A list of settings you want to delete.

  -description <string>

             Description for the VM. Shown in the web-interface VM's
             summary. This is saved as comment inside the configuration
             file.

  -digest    <string>

             Prevent changes if current configuration file has different
             SHA1 digest. This can be used to prevent concurrent
             modifications.

  -efidisk0  [file=]<volume> [,efitype=<2m|4m>] [,format=<enum>]
             [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>]
             [,size=<DiskSize>]

             Configure a disk for storing EFI vars. Use the special syntax
             STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that
             SIZE_IN_GiB is ignored here and that the default EFI vars are
             copied to the volume instead. Use STORAGE_ID:0 and the
             'import-from' parameter to import from an existing volume.

  -force     <boolean>

             Force physical removal. Without this, we simple remove the
             disk from the config file and create an additional
             configuration entry called 'unused[n]', which contains the
             volume ID. Unlink of unused[n] always cause physical removal.

             Requires option(s): delete

  -freeze    <boolean>

             Freeze CPU at startup (use 'c' monitor command to start
             execution).

  -hookscript <string>

             Script that will be executed during various steps in the vms
             lifetime.

  -hostpci[n] [host=]<HOSTPCIID[;HOSTPCIID2...]> [,device-id=<hex id>]
             [,legacy-igd=<1|0>] [,mdev=<string>] [,pcie=<1|0>]
             [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>]
             [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]

             Map host PCI devices into guest.

  -hotplug   <string>   (default=network,disk,usb)

             Selectively enable hotplug features. This is a comma separated
             list of hotplug features: 'network', 'disk', 'cpu', 'memory',
             'usb' and 'cloudinit'. Use '0' to disable hotplug completely.
             Using '1' as value is an alias for the default
             `network,disk,usb`. USB hotplugging is possible for guests
             with machine version >= 7.1 and ostype l26 or windows > 7.

  -hugepages <1024 | 2 | any>

             Enable/disable hugepages memory.

  -ide[n]    [file=]<volume> [,aio=<native|threads|io_uring>]
             [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>]
             [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>]
             [,bps_wr_max_length=<seconds>] [,cache=<enum>]
             [,cyls=<integer>] [,detect_zeroes=<1|0>]
             [,discard=<ignore|on>] [,format=<enum>] [,heads=<integer>]
             [,import-from=<source volume>] [,iops=<iops>]
             [,iops_max=<iops>] [,iops_max_length=<seconds>]
             [,iops_rd=<iops>] [,iops_rd_max=<iops>]
             [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>]
             [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>]
             [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>]
             [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>]
             [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>]
             [,rerror=<ignore|report|stop>] [,secs=<integer>]
             [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>]
             [,snapshot=<1|0>] [,ssd=<1|0>] [,trans=<none|lba|auto>]
             [,werror=<enum>] [,wwn=<wwn>]

             Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the
             special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
             volume. Use STORAGE_ID:0 and the 'import-from' parameter to
             import from an existing volume.

  -ipconfig[n] [gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>]
             [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]

             cloud-init: Specify IP addresses and gateways for the
             corresponding interface.

             IP addresses use CIDR notation, gateways are optional but need
             an IP of the same type specified.

             The special string 'dhcp' can be used for IP addresses to use
             DHCP, in which case no explicit
             gateway should be provided.
             For IPv6 the special string 'auto' can be used to use
             stateless autoconfiguration. This requires
             cloud-init 19.4 or newer.

             If cloud-init is enabled and neither an IPv4 nor an IPv6
             address is specified, it defaults to using
             dhcp on IPv4.

  -ivshmem   size=<integer> [,name=<string>]

             Inter-VM shared memory. Useful for direct communication
             between VMs, or to the host.

  -keephugepages <boolean>   (default=0)

             Use together with hugepages. If enabled, hugepages will not
             not be deleted after VM shutdown and can be used for
             subsequent starts.

  -keyboard  <da | de | de-ch | en-gb | en-us | es | fi | fr | fr-be |
             fr-ca | fr-ch | hu | is | it | ja | lt | mk | nl | no | pl |
             pt | pt-br | sl | sv | tr>

             Keyboard layout for VNC server. This option is generally not
             required and is often better handled from within the guest OS.

  -kvm       <boolean>   (default=1)

             Enable/disable KVM hardware virtualization.

  -localtime <boolean>

             Set the real time clock (RTC) to local time. This is enabled
             by default if the `ostype` indicates a Microsoft Windows OS.

  -lock      <backup | clone | create | migrate | rollback | snapshot |
             snapshot-delete | suspended | suspending>

             Lock/unlock the VM.

  -machine
             (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+
             (\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)

             Specifies the QEMU machine type.

  -memory    <integer> (16 - N)   (default=512)

             Amount of RAM for the VM in MiB. This is the maximum available
             memory when you use the balloon device.

  -migrate_downtime <number> (0 - N)   (default=0.1)

             Set maximum tolerated downtime (in seconds) for migrations.

  -migrate_speed <integer> (0 - N)   (default=0)

             Set maximum speed (in MB/s) for migrations. Value 0 is no
             limit.

  -name      <string>

             Set a name for the VM. Only used on the configuration web
             interface.

  -nameserver <string>

             cloud-init: Sets DNS server IP address for a container. Create
             will automatically use the setting from the host if neither
             searchdomain nor nameserver are set.

  -net[n]    [model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>]
             [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>]
             [,mtu=<integer>] [,queues=<integer>] [,rate=<number>]
             [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>]
             [,<model>=<macaddr>]

             Specify network devices.

  -numa      <boolean>   (default=0)

             Enable/disable NUMA.

  -numa[n]   cpus=<id[-id];...> [,hostnodes=<id[-id];...>]
             [,memory=<number>] [,policy=<preferred|bind|interleave>]

             NUMA topology.

  -onboot    <boolean>   (default=0)

             Specifies whether a VM will be started during system bootup.

  -ostype    <l24 | l26 | other | solaris | w2k | w2k3 | w2k8 | win10 |
             win11 | win7 | win8 | wvista | wxp>

             Specify guest operating system.

  -parallel[n] /dev/parport\d+|/dev/usb/lp\d+

             Map host parallel devices (n is 0 to 2).

  -protection <boolean>   (default=0)

             Sets the protection flag of the VM. This will disable the
             remove VM and remove disk operations.

  -reboot    <boolean>   (default=1)

             Allow reboot. If set to '0' the VM exit on reboot.

  -revert    <string>

             Revert a pending change.

  -rng0      [source=]</dev/urandom|/dev/random|/dev/hwrng>
             [,max_bytes=<integer>] [,period=<integer>]

             Configure a VirtIO-based Random Number Generator.

  -sata[n]   [file=]<volume> [,aio=<native|threads|io_uring>]
             [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>]
             [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>]
             [,bps_wr_max_length=<seconds>] [,cache=<enum>]
             [,cyls=<integer>] [,detect_zeroes=<1|0>]
             [,discard=<ignore|on>] [,format=<enum>] [,heads=<integer>]
             [,import-from=<source volume>] [,iops=<iops>]
             [,iops_max=<iops>] [,iops_max_length=<seconds>]
             [,iops_rd=<iops>] [,iops_rd_max=<iops>]
             [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>]
             [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>]
             [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>]
             [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>]
             [,media=<cdrom|disk>] [,replicate=<1|0>]
             [,rerror=<ignore|report|stop>] [,secs=<integer>]
             [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>]
             [,snapshot=<1|0>] [,ssd=<1|0>] [,trans=<none|lba|auto>]
             [,werror=<enum>] [,wwn=<wwn>]

             Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the
             special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
             volume. Use STORAGE_ID:0 and the 'import-from' parameter to
             import from an existing volume.

  -scsi[n]   [file=]<volume> [,aio=<native|threads|io_uring>]
             [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>]
             [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>]
             [,bps_wr_max_length=<seconds>] [,cache=<enum>]
             [,cyls=<integer>] [,detect_zeroes=<1|0>]
             [,discard=<ignore|on>] [,format=<enum>] [,heads=<integer>]
             [,import-from=<source volume>] [,iops=<iops>]
             [,iops_max=<iops>] [,iops_max_length=<seconds>]
             [,iops_rd=<iops>] [,iops_rd_max=<iops>]
             [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>]
             [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>]
             [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>]
             [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>]
             [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>]
             [,queues=<integer>] [,replicate=<1|0>]
             [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>]
             [,secs=<integer>] [,serial=<serial>] [,shared=<1|0>]
             [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>]
             [,trans=<none|lba|auto>] [,werror=<enum>] [,wwn=<wwn>]

             Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the
             special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
             volume. Use STORAGE_ID:0 and the 'import-from' parameter to
             import from an existing volume.

  -scsihw    <lsi | lsi53c810 | megasas | pvscsi | virtio-scsi-pci |
             virtio-scsi-single>   (default=lsi)

             SCSI controller model

  -searchdomain <string>

             cloud-init: Sets DNS search domains for a container. Create
             will automatically use the setting from the host if neither
             searchdomain nor nameserver are set.

  -serial[n] (/dev/.+|socket)

             Create a serial device inside the VM (n is 0 to 3)

  -shares    <integer> (0 - 50000)   (default=1000)

             Amount of memory shares for auto-ballooning. The larger the
             number is, the more memory this VM gets. Number is relative to
             weights of all other running VMs. Using zero disables
             auto-ballooning. Auto-ballooning is done by pvestatd.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

  -smbios1   [base64=<1|0>] [,family=<Base64 encoded string>]
             [,manufacturer=<Base64 encoded string>] [,product=<Base64
             encoded string>] [,serial=<Base64 encoded string>]
             [,sku=<Base64 encoded string>] [,uuid=<UUID>]
             [,version=<Base64 encoded string>]

             Specify SMBIOS type 1 fields.

  -smp       <integer> (1 - N)   (default=1)

             The number of CPUs. Please use option -sockets instead.

  -sockets   <integer> (1 - N)   (default=1)

             The number of CPU sockets.

  -spice_enhancements [foldersharing=<1|0>]
             [,videostreaming=<off|all|filter>]

             Configure additional enhancements for SPICE.

  -sshkeys   <filepath>

             cloud-init: Setup public SSH keys (one key per line, OpenSSH
             format).

  -startdate (now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)   (default=now)

             Set the initial date of the real time clock. Valid format for
             date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.

  -startup   [[order=]\d+] [,up=\d+] [,down=\d+]

             Startup and shutdown behavior. Order is a non-negative number
             defining the general startup order. Shutdown in done with
             reverse ordering. Additionally you can set the 'up' or 'down'
             delay in seconds, which specifies a delay to wait before the
             next VM is started or stopped.

  -tablet    <boolean>   (default=1)

             Enable/disable the USB tablet device.

  -tags      <string>

             Tags of the VM. This is only meta information.

  -tdf       <boolean>   (default=0)

             Enable/disable time drift fix.

  -template  <boolean>   (default=0)

             Enable/disable Template.

  -tpmstate0 [file=]<volume> [,import-from=<source volume>]
             [,size=<DiskSize>] [,version=<v1.2|v2.0>]

             Configure a Disk for storing TPM state. The format is fixed to
             'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to
             allocate a new volume. Note that SIZE_IN_GiB is ignored here
             and 4 MiB will be used instead. Use STORAGE_ID:0 and the
             'import-from' parameter to import from an existing volume.

  -unused[n] [file=]<volume>

             Reference to unused volumes. This is used internally, and
             should not be modified manually.

  -usb[n]    [host=]<HOSTUSBDEVICE|spice> [,usb3=<1|0>]

             Configure an USB device (n is 0 to 4, for machine version >=
             7.1 and ostype l26 or windows > 7, n can be up to 14).

  -vcpus     <integer> (1 - N)   (default=0)

             Number of hotplugged vcpus.

  -vga       [[type=]<enum>] [,memory=<integer>]

             Configure the VGA hardware.

  -virtio[n] [file=]<volume> [,aio=<native|threads|io_uring>]
             [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>]
             [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>]
             [,bps_wr_max_length=<seconds>] [,cache=<enum>]
             [,cyls=<integer>] [,detect_zeroes=<1|0>]
             [,discard=<ignore|on>] [,format=<enum>] [,heads=<integer>]
             [,import-from=<source volume>] [,iops=<iops>]
             [,iops_max=<iops>] [,iops_max_length=<seconds>]
             [,iops_rd=<iops>] [,iops_rd_max=<iops>]
             [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>]
             [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>]
             [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>]
             [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>]
             [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>]
             [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,secs=<integer>]
             [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>]
             [,snapshot=<1|0>] [,trans=<none|lba|auto>] [,werror=<enum>]

             Use volume as VIRTIO hard disk (n is 0 to 15). Use the special
             syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use
             STORAGE_ID:0 and the 'import-from' parameter to import from an
             existing volume.

  -vmgenid   <UUID>   (default=1 (autogenerated))

             Set VM Generation ID. Use '1' to autogenerate on create or
             update, pass '0' to disable explicitly.

  -vmstatestorage <string>

             Default storage for VM state volumes/files.

  -watchdog  [[model=]<i6300esb|ib700>] [,action=<enum>]

             Create a virtual hardware watchdog device.

USAGE: qm showcmd <vmid> [OPTIONS]

  Show command line which is used to start the VM (debug info).

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -pretty    <boolean>   (default=0)

             Puts each option on a new line to enhance human readability

  -snapshot  <string>

             Fetch config values from given snapshot.

USAGE: qm shutdown <vmid> [OPTIONS]

  Shutdown virtual machine. This is similar to pressing the power button on
  a physical machine.This will send an ACPI event for the guest OS, which
  should then proceed to a clean shutdown.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -forceStop <boolean>   (default=0)

             Make sure the VM stops.

  -keepActive <boolean>   (default=0)

             Do not deactivate storage volumes.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

  -timeout   <integer> (0 - N)

             Wait maximal timeout seconds.

USAGE: qm snapshot <vmid> <snapname> [OPTIONS]

  Snapshot a VM.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  <snapname> <string>

             The name of the snapshot.

  -description <string>

             A textual description or comment.

  -vmstate   <boolean>

             Save the vmstate

USAGE: qm start <vmid> [OPTIONS]

  Start virtual machine.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -force-cpu <string>

             Override QEMU's -cpu argument with the given string.

  -machine
             (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+
             (\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)

             Specifies the QEMU machine type.

  -migratedfrom <string>

             The cluster node name.

  -migration_network <string>

             CIDR of the (sub) network that is used for migration.

  -migration_type <insecure | secure>

             Migration traffic is encrypted using an SSH tunnel by default.
             On secure, completely private networks this can be disabled to
             increase performance.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

  -stateuri  <string>

             Some command save/restore state from this location.

  -targetstorage <string>

             Mapping from source to target storages. Providing only a
             single storage ID maps all source storages to that storage.
             Providing the special value '1' will map each source storage
             to itself.

  -timeout   <integer> (0 - N)   (default=max(30, vm memory in GiB))

             Wait maximal timeout seconds.

USAGE: qm status <vmid> [OPTIONS]

  Show VM status.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -verbose   <boolean>

             Verbose output format

USAGE: qm stop <vmid> [OPTIONS]

  Stop virtual machine. The qemu process will exit immediately. Thisis akin
  to pulling the power plug of a running computer and may damage the VM
  data

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -keepActive <boolean>   (default=0)

             Do not deactivate storage volumes.

  -migratedfrom <string>

             The cluster node name.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

  -timeout   <integer> (0 - N)

             Wait maximal timeout seconds.

USAGE: qm suspend <vmid> [OPTIONS]

  Suspend virtual machine.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -skiplock  <boolean>

             Ignore locks - only root is allowed to use this option.

  -statestorage <string>

             The storage for the VM state

             Requires option(s): todisk

  -todisk    <boolean>   (default=0)

             If set, suspends the VM to disk. Will be resumed on next VM
             start.

USAGE: qm template <vmid> [OPTIONS]

  Create a Template.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -disk      <efidisk0 | ide0 | ide1 | ide2 | ide3 | sata0 | sata1 | sata2
             | sata3 | sata4 | sata5 | scsi0 | scsi1 | scsi10 | scsi11 |
             scsi12 | scsi13 | scsi14 | scsi15 | scsi16 | scsi17 | scsi18 |
             scsi19 | scsi2 | scsi20 | scsi21 | scsi22 | scsi23 | scsi24 |
             scsi25 | scsi26 | scsi27 | scsi28 | scsi29 | scsi3 | scsi30 |
             scsi4 | scsi5 | scsi6 | scsi7 | scsi8 | scsi9 | tpmstate0 |
             virtio0 | virtio1 | virtio10 | virtio11 | virtio12 | virtio13
             | virtio14 | virtio15 | virtio2 | virtio3 | virtio4 | virtio5
             | virtio6 | virtio7 | virtio8 | virtio9>

             If you want to convert only 1 disk to base image.

USAGE: qm terminal <vmid> [OPTIONS]

  Open a terminal using a serial device (The VM need to have a serial
  device configured, for example 'serial0: socket')

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -escape    <string>   (default=^O)

             Escape character.

  -iface     <serial0 | serial1 | serial2 | serial3>

             Select the serial device. By default we simply use the first
             suitable device.

USAGE: qm unlock <vmid>

  Unlock the VM.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm vncproxy <vmid>

  Proxy VM VNC traffic to stdin/stdout

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

USAGE: qm wait <vmid> [OPTIONS]

  Wait until the VM is stopped.

  <vmid>     <integer> (1 - N)

             The (unique) ID of the VM.

  -timeout   <integer> (1 - N)

             Timeout in seconds. Default is to wait forever.


root@netops:~#

gggEFEVkj